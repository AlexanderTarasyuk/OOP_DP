package model;

import exception.SuchLoginExist;
import lombok.Data;
import lombok.ToString;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;

/**
 * Created by t420 on 26.04.2018.
 */

//
@Data

public class User extends AbstractUser {
    // id of DB
    private static AtomicInteger idNumber = new AtomicInteger(1);

    //synchronized list of logins
    private static List<String> loginList = new ArrayList<>();
    private static List<String> loginListSynchronized = Collections.synchronizedList(loginList);

    //DB of users
    public static ArrayList<User> userList = new ArrayList<>();


    public User(String login, String password, String FIO) throws SuchLoginExist {
        //autogenerated and unique id
        id = idNumber.intValue();
        idNumber.addAndGet(1);

        //only unique logins must exist
        if (!loginListSynchronized.contains(login)) {
            this.login = login;
        } else {
            throw new SuchLoginExist();
        }
        loginListSynchronized.add(login);
        this.password = password;
        this.FIO = FIO;
        System.out.println();
    }

    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", login='" + login + '\'' +
                ", password='" + password + '\'' +
                ", FIO='" + FIO + '\'' +
                '}';
    }
}
